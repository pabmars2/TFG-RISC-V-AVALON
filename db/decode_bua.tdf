--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:25:18:06:53:SJ cbx_lpm_add_sub 2017:10:25:18:06:53:SJ cbx_lpm_compare 2017:10:25:18:06:53:SJ cbx_lpm_decode 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ cbx_nadder 2017:10:25:18:06:53:SJ cbx_stratix 2017:10:25:18:06:53:SJ cbx_stratixii 2017:10:25:18:06:53:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode8846w[1..0]	: WIRE;
	w_anode8855w[3..0]	: WIRE;
	w_anode8872w[3..0]	: WIRE;
	w_anode8882w[3..0]	: WIRE;
	w_anode8892w[3..0]	: WIRE;
	w_anode8902w[3..0]	: WIRE;
	w_anode8912w[3..0]	: WIRE;
	w_anode8922w[3..0]	: WIRE;
	w_anode8932w[3..0]	: WIRE;
	w_anode8944w[1..0]	: WIRE;
	w_anode8951w[3..0]	: WIRE;
	w_anode8962w[3..0]	: WIRE;
	w_anode8972w[3..0]	: WIRE;
	w_anode8982w[3..0]	: WIRE;
	w_anode8992w[3..0]	: WIRE;
	w_anode9002w[3..0]	: WIRE;
	w_anode9012w[3..0]	: WIRE;
	w_anode9022w[3..0]	: WIRE;
	w_data8844w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode9022w[3..3], w_anode9012w[3..3], w_anode9002w[3..3], w_anode8992w[3..3], w_anode8982w[3..3], w_anode8972w[3..3], w_anode8962w[3..3], w_anode8951w[3..3]), ( w_anode8932w[3..3], w_anode8922w[3..3], w_anode8912w[3..3], w_anode8902w[3..3], w_anode8892w[3..3], w_anode8882w[3..3], w_anode8872w[3..3], w_anode8855w[3..3]));
	w_anode8846w[] = ( (w_anode8846w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8855w[] = ( (w_anode8855w[2..2] & (! w_data8844w[2..2])), (w_anode8855w[1..1] & (! w_data8844w[1..1])), (w_anode8855w[0..0] & (! w_data8844w[0..0])), w_anode8846w[1..1]);
	w_anode8872w[] = ( (w_anode8872w[2..2] & (! w_data8844w[2..2])), (w_anode8872w[1..1] & (! w_data8844w[1..1])), (w_anode8872w[0..0] & w_data8844w[0..0]), w_anode8846w[1..1]);
	w_anode8882w[] = ( (w_anode8882w[2..2] & (! w_data8844w[2..2])), (w_anode8882w[1..1] & w_data8844w[1..1]), (w_anode8882w[0..0] & (! w_data8844w[0..0])), w_anode8846w[1..1]);
	w_anode8892w[] = ( (w_anode8892w[2..2] & (! w_data8844w[2..2])), (w_anode8892w[1..1] & w_data8844w[1..1]), (w_anode8892w[0..0] & w_data8844w[0..0]), w_anode8846w[1..1]);
	w_anode8902w[] = ( (w_anode8902w[2..2] & w_data8844w[2..2]), (w_anode8902w[1..1] & (! w_data8844w[1..1])), (w_anode8902w[0..0] & (! w_data8844w[0..0])), w_anode8846w[1..1]);
	w_anode8912w[] = ( (w_anode8912w[2..2] & w_data8844w[2..2]), (w_anode8912w[1..1] & (! w_data8844w[1..1])), (w_anode8912w[0..0] & w_data8844w[0..0]), w_anode8846w[1..1]);
	w_anode8922w[] = ( (w_anode8922w[2..2] & w_data8844w[2..2]), (w_anode8922w[1..1] & w_data8844w[1..1]), (w_anode8922w[0..0] & (! w_data8844w[0..0])), w_anode8846w[1..1]);
	w_anode8932w[] = ( (w_anode8932w[2..2] & w_data8844w[2..2]), (w_anode8932w[1..1] & w_data8844w[1..1]), (w_anode8932w[0..0] & w_data8844w[0..0]), w_anode8846w[1..1]);
	w_anode8944w[] = ( (w_anode8944w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8951w[] = ( (w_anode8951w[2..2] & (! w_data8844w[2..2])), (w_anode8951w[1..1] & (! w_data8844w[1..1])), (w_anode8951w[0..0] & (! w_data8844w[0..0])), w_anode8944w[1..1]);
	w_anode8962w[] = ( (w_anode8962w[2..2] & (! w_data8844w[2..2])), (w_anode8962w[1..1] & (! w_data8844w[1..1])), (w_anode8962w[0..0] & w_data8844w[0..0]), w_anode8944w[1..1]);
	w_anode8972w[] = ( (w_anode8972w[2..2] & (! w_data8844w[2..2])), (w_anode8972w[1..1] & w_data8844w[1..1]), (w_anode8972w[0..0] & (! w_data8844w[0..0])), w_anode8944w[1..1]);
	w_anode8982w[] = ( (w_anode8982w[2..2] & (! w_data8844w[2..2])), (w_anode8982w[1..1] & w_data8844w[1..1]), (w_anode8982w[0..0] & w_data8844w[0..0]), w_anode8944w[1..1]);
	w_anode8992w[] = ( (w_anode8992w[2..2] & w_data8844w[2..2]), (w_anode8992w[1..1] & (! w_data8844w[1..1])), (w_anode8992w[0..0] & (! w_data8844w[0..0])), w_anode8944w[1..1]);
	w_anode9002w[] = ( (w_anode9002w[2..2] & w_data8844w[2..2]), (w_anode9002w[1..1] & (! w_data8844w[1..1])), (w_anode9002w[0..0] & w_data8844w[0..0]), w_anode8944w[1..1]);
	w_anode9012w[] = ( (w_anode9012w[2..2] & w_data8844w[2..2]), (w_anode9012w[1..1] & w_data8844w[1..1]), (w_anode9012w[0..0] & (! w_data8844w[0..0])), w_anode8944w[1..1]);
	w_anode9022w[] = ( (w_anode9022w[2..2] & w_data8844w[2..2]), (w_anode9022w[1..1] & w_data8844w[1..1]), (w_anode9022w[0..0] & w_data8844w[0..0]), w_anode8944w[1..1]);
	w_data8844w[2..0] = data_wire[2..0];
END;
--VALID FILE
